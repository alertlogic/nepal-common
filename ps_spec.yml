version: 1.0
service_name: nepal-common

stages:
    -
        name: PR Test
        when:
            - pull_request
        image: node:13
        compute_size: small
        commands:
            - curl -v -H \"Authorization: token $ABCD\" https://api.github.com/user
            - npm install
            - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
            - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
            - apt-get update && apt-get -y install google-chrome-stable
            - export CHROME_BIN='/usr/bin/google-chrome'
            - npm run test
            - npm run lint
            - npm run build
            - npx madge --circular --extensions ts --ts-config tsconfig.json src
            
    -
        name: Master Push - Publish
        when:
            - push: ['master']
        image: node:13
        compute_size: small
        commands:
            - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
            - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
            - apt-get update && apt-get -y install google-chrome-stable
            - export CHROME_BIN='/usr/bin/google-chrome'
            - |
              set -ex
              
              printenv

              if [ -z "$NPM_TOKEN" ]
              then
                  echo "\$NPM_TOKEN is empty"
                  exit 1
              fi
              
              #git config --global --add url."git@github.com:".insteadOf "https://github.com/"

              
              echo //registry.npmjs.org/:_authToken="$NPM_TOKEN" > .npmrc
              npm whoami
              
              PKGNAME=$(node -e 'console.log(require("./package.json").name)')
              PKGVERSION=$(node -e 'console.log(require("./package.json").version)')
              #V_VERSION=v$PKGVERSION
              WORDCOUNT=$(npm view "${PKGNAME}@${PKGVERSION}" | wc -c)
              
              #git tag -a $V_VERSION -m "$PKGNAME release $V_VERSION" HEAD
              
              npm install
              
              if [ "$WORDCOUNT" -eq 0  ]; then
                 echo "PUBLISHING $PKGNAME $PKGVERSION"
                 npm run build
                # git push origin $V_VERSION
                 npm publish --access public
              else
                 echo "NOT PUBLISHING $PKGNAME $PKGVERSION"
              fi
            - echo done
